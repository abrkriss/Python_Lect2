# Задание 2. Подсчитать четные и нечетные цифры введенного натурального числа.
# Например, если введено число 34560, то у него 3 четные цифры
# (4, 6 и 0) и 2 нечетные (3 и 5).
# Подсказка:
# На каждом шаге вам нужно 'доставать' из числа очередную цифру
# и смотреть является ли она четной или нечетной.
# При этом увеличиваем соответствующий счетчик
# Пока все числа не извлечены, рекурсивные вызовы продолжаем
# Условие завершения рекурсии - все числа извлечены
# Используем операции % //. Операции взятия по индексу применять нельзя.
# Решите через рекурсию. В задании нельзя применять циклы.
# Пример
# Введите число: 123
# Количество четных и нечетных цифр в числе равно: (1, 2)


def even_num(el, count_1=0, count_2=0):
    if not el:
        return count_1, count_2
    if el % 10 % 2 == 1:
        count_1 += 1
    else:
        count_2 += 1
    even_num(el // 10, count_1, count_2)
    return print(f"Четные {count_2}, нечетные {count_1}")


number = int(input('Введите натуральное число '))
print(even_num(number))
